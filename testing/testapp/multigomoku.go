// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package testapp

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// MultiGomokuABI is the input ABI used to generate the binding from.
const MultiGomokuABI = "[{\"constant\":true,\"inputs\":[{\"name\":\"_session\",\"type\":\"bytes32\"}],\"name\":\"getSettleFinalizedTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_stateProof\",\"type\":\"bytes\"}],\"name\":\"intendSettle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_session\",\"type\":\"bytes32\"}],\"name\":\"getSeqNum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_nonce\",\"type\":\"uint256\"},{\"name\":\"_signers\",\"type\":\"address[]\"}],\"name\":\"getSessionID\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_session\",\"type\":\"bytes32\"}],\"name\":\"getStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minStoneOffchain\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_session\",\"type\":\"bytes32\"}],\"name\":\"finalizeOnActionTimeout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_query\",\"type\":\"bytes\"}],\"name\":\"isFinalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxStoneOnchain\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_session\",\"type\":\"bytes32\"}],\"name\":\"getActionDeadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_session\",\"type\":\"bytes32\"},{\"name\":\"_action\",\"type\":\"bytes\"}],\"name\":\"applyAction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_minStoneOffchain\",\"type\":\"uint8\"},{\"name\":\"_maxStoneOnchain\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"session\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"seq\",\"type\":\"uint256\"}],\"name\":\"IntendSettle\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"name\":\"_query\",\"type\":\"bytes\"}],\"name\":\"getOutcome\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_session\",\"type\":\"bytes32\"},{\"name\":\"_key\",\"type\":\"uint256\"}],\"name\":\"getState\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// MultiGomokuBin is the compiled bytecode used for deploying new contracts.
const MultiGomokuBin = ``

// DeployMultiGomoku deploys a new Ethereum contract, binding an instance of MultiGomoku to it.
func DeployMultiGomoku(auth *bind.TransactOpts, backend bind.ContractBackend, _minStoneOffchain uint8, _maxStoneOnchain uint8) (common.Address, *types.Transaction, *MultiGomoku, error) {
	parsed, err := abi.JSON(strings.NewReader(MultiGomokuABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(MultiGomokuBin), backend, _minStoneOffchain, _maxStoneOnchain)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &MultiGomoku{MultiGomokuCaller: MultiGomokuCaller{contract: contract}, MultiGomokuTransactor: MultiGomokuTransactor{contract: contract}, MultiGomokuFilterer: MultiGomokuFilterer{contract: contract}}, nil
}

// MultiGomoku is an auto generated Go binding around an Ethereum contract.
type MultiGomoku struct {
	MultiGomokuCaller     // Read-only binding to the contract
	MultiGomokuTransactor // Write-only binding to the contract
	MultiGomokuFilterer   // Log filterer for contract events
}

// MultiGomokuCaller is an auto generated read-only Go binding around an Ethereum contract.
type MultiGomokuCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MultiGomokuTransactor is an auto generated write-only Go binding around an Ethereum contract.
type MultiGomokuTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MultiGomokuFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type MultiGomokuFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MultiGomokuSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type MultiGomokuSession struct {
	Contract     *MultiGomoku      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// MultiGomokuCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type MultiGomokuCallerSession struct {
	Contract *MultiGomokuCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// MultiGomokuTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type MultiGomokuTransactorSession struct {
	Contract     *MultiGomokuTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// MultiGomokuRaw is an auto generated low-level Go binding around an Ethereum contract.
type MultiGomokuRaw struct {
	Contract *MultiGomoku // Generic contract binding to access the raw methods on
}

// MultiGomokuCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type MultiGomokuCallerRaw struct {
	Contract *MultiGomokuCaller // Generic read-only contract binding to access the raw methods on
}

// MultiGomokuTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type MultiGomokuTransactorRaw struct {
	Contract *MultiGomokuTransactor // Generic write-only contract binding to access the raw methods on
}

// NewMultiGomoku creates a new instance of MultiGomoku, bound to a specific deployed contract.
func NewMultiGomoku(address common.Address, backend bind.ContractBackend) (*MultiGomoku, error) {
	contract, err := bindMultiGomoku(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &MultiGomoku{MultiGomokuCaller: MultiGomokuCaller{contract: contract}, MultiGomokuTransactor: MultiGomokuTransactor{contract: contract}, MultiGomokuFilterer: MultiGomokuFilterer{contract: contract}}, nil
}

// NewMultiGomokuCaller creates a new read-only instance of MultiGomoku, bound to a specific deployed contract.
func NewMultiGomokuCaller(address common.Address, caller bind.ContractCaller) (*MultiGomokuCaller, error) {
	contract, err := bindMultiGomoku(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &MultiGomokuCaller{contract: contract}, nil
}

// NewMultiGomokuTransactor creates a new write-only instance of MultiGomoku, bound to a specific deployed contract.
func NewMultiGomokuTransactor(address common.Address, transactor bind.ContractTransactor) (*MultiGomokuTransactor, error) {
	contract, err := bindMultiGomoku(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &MultiGomokuTransactor{contract: contract}, nil
}

// NewMultiGomokuFilterer creates a new log filterer instance of MultiGomoku, bound to a specific deployed contract.
func NewMultiGomokuFilterer(address common.Address, filterer bind.ContractFilterer) (*MultiGomokuFilterer, error) {
	contract, err := bindMultiGomoku(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &MultiGomokuFilterer{contract: contract}, nil
}

// bindMultiGomoku binds a generic wrapper to an already deployed contract.
func bindMultiGomoku(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(MultiGomokuABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_MultiGomoku *MultiGomokuRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _MultiGomoku.Contract.MultiGomokuCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_MultiGomoku *MultiGomokuRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MultiGomoku.Contract.MultiGomokuTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_MultiGomoku *MultiGomokuRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _MultiGomoku.Contract.MultiGomokuTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_MultiGomoku *MultiGomokuCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _MultiGomoku.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_MultiGomoku *MultiGomokuTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MultiGomoku.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_MultiGomoku *MultiGomokuTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _MultiGomoku.Contract.contract.Transact(opts, method, params...)
}

// GetActionDeadline is a free data retrieval call binding the contract method 0xcab92446.
//
// Solidity: function getActionDeadline(bytes32 _session) constant returns(uint256)
func (_MultiGomoku *MultiGomokuCaller) GetActionDeadline(opts *bind.CallOpts, _session [32]byte) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MultiGomoku.contract.Call(opts, out, "getActionDeadline", _session)
	return *ret0, err
}

// GetActionDeadline is a free data retrieval call binding the contract method 0xcab92446.
//
// Solidity: function getActionDeadline(bytes32 _session) constant returns(uint256)
func (_MultiGomoku *MultiGomokuSession) GetActionDeadline(_session [32]byte) (*big.Int, error) {
	return _MultiGomoku.Contract.GetActionDeadline(&_MultiGomoku.CallOpts, _session)
}

// GetActionDeadline is a free data retrieval call binding the contract method 0xcab92446.
//
// Solidity: function getActionDeadline(bytes32 _session) constant returns(uint256)
func (_MultiGomoku *MultiGomokuCallerSession) GetActionDeadline(_session [32]byte) (*big.Int, error) {
	return _MultiGomoku.Contract.GetActionDeadline(&_MultiGomoku.CallOpts, _session)
}

// GetOutcome is a free data retrieval call binding the contract method 0xea4ba8eb.
//
// Solidity: function getOutcome(bytes _query) constant returns(bool)
func (_MultiGomoku *MultiGomokuCaller) GetOutcome(opts *bind.CallOpts, _query []byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _MultiGomoku.contract.Call(opts, out, "getOutcome", _query)
	return *ret0, err
}

// GetOutcome is a free data retrieval call binding the contract method 0xea4ba8eb.
//
// Solidity: function getOutcome(bytes _query) constant returns(bool)
func (_MultiGomoku *MultiGomokuSession) GetOutcome(_query []byte) (bool, error) {
	return _MultiGomoku.Contract.GetOutcome(&_MultiGomoku.CallOpts, _query)
}

// GetOutcome is a free data retrieval call binding the contract method 0xea4ba8eb.
//
// Solidity: function getOutcome(bytes _query) constant returns(bool)
func (_MultiGomoku *MultiGomokuCallerSession) GetOutcome(_query []byte) (bool, error) {
	return _MultiGomoku.Contract.GetOutcome(&_MultiGomoku.CallOpts, _query)
}

// GetSeqNum is a free data retrieval call binding the contract method 0x3b6de66f.
//
// Solidity: function getSeqNum(bytes32 _session) constant returns(uint256)
func (_MultiGomoku *MultiGomokuCaller) GetSeqNum(opts *bind.CallOpts, _session [32]byte) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MultiGomoku.contract.Call(opts, out, "getSeqNum", _session)
	return *ret0, err
}

// GetSeqNum is a free data retrieval call binding the contract method 0x3b6de66f.
//
// Solidity: function getSeqNum(bytes32 _session) constant returns(uint256)
func (_MultiGomoku *MultiGomokuSession) GetSeqNum(_session [32]byte) (*big.Int, error) {
	return _MultiGomoku.Contract.GetSeqNum(&_MultiGomoku.CallOpts, _session)
}

// GetSeqNum is a free data retrieval call binding the contract method 0x3b6de66f.
//
// Solidity: function getSeqNum(bytes32 _session) constant returns(uint256)
func (_MultiGomoku *MultiGomokuCallerSession) GetSeqNum(_session [32]byte) (*big.Int, error) {
	return _MultiGomoku.Contract.GetSeqNum(&_MultiGomoku.CallOpts, _session)
}

// GetSessionID is a free data retrieval call binding the contract method 0x4d8bedec.
//
// Solidity: function getSessionID(uint256 _nonce, address[] _signers) constant returns(bytes32)
func (_MultiGomoku *MultiGomokuCaller) GetSessionID(opts *bind.CallOpts, _nonce *big.Int, _signers []common.Address) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _MultiGomoku.contract.Call(opts, out, "getSessionID", _nonce, _signers)
	return *ret0, err
}

// GetSessionID is a free data retrieval call binding the contract method 0x4d8bedec.
//
// Solidity: function getSessionID(uint256 _nonce, address[] _signers) constant returns(bytes32)
func (_MultiGomoku *MultiGomokuSession) GetSessionID(_nonce *big.Int, _signers []common.Address) ([32]byte, error) {
	return _MultiGomoku.Contract.GetSessionID(&_MultiGomoku.CallOpts, _nonce, _signers)
}

// GetSessionID is a free data retrieval call binding the contract method 0x4d8bedec.
//
// Solidity: function getSessionID(uint256 _nonce, address[] _signers) constant returns(bytes32)
func (_MultiGomoku *MultiGomokuCallerSession) GetSessionID(_nonce *big.Int, _signers []common.Address) ([32]byte, error) {
	return _MultiGomoku.Contract.GetSessionID(&_MultiGomoku.CallOpts, _nonce, _signers)
}

// GetSettleFinalizedTime is a free data retrieval call binding the contract method 0x09b65d86.
//
// Solidity: function getSettleFinalizedTime(bytes32 _session) constant returns(uint256)
func (_MultiGomoku *MultiGomokuCaller) GetSettleFinalizedTime(opts *bind.CallOpts, _session [32]byte) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MultiGomoku.contract.Call(opts, out, "getSettleFinalizedTime", _session)
	return *ret0, err
}

// GetSettleFinalizedTime is a free data retrieval call binding the contract method 0x09b65d86.
//
// Solidity: function getSettleFinalizedTime(bytes32 _session) constant returns(uint256)
func (_MultiGomoku *MultiGomokuSession) GetSettleFinalizedTime(_session [32]byte) (*big.Int, error) {
	return _MultiGomoku.Contract.GetSettleFinalizedTime(&_MultiGomoku.CallOpts, _session)
}

// GetSettleFinalizedTime is a free data retrieval call binding the contract method 0x09b65d86.
//
// Solidity: function getSettleFinalizedTime(bytes32 _session) constant returns(uint256)
func (_MultiGomoku *MultiGomokuCallerSession) GetSettleFinalizedTime(_session [32]byte) (*big.Int, error) {
	return _MultiGomoku.Contract.GetSettleFinalizedTime(&_MultiGomoku.CallOpts, _session)
}

// GetState is a free data retrieval call binding the contract method 0x29dd2f8e.
//
// Solidity: function getState(bytes32 _session, uint256 _key) constant returns(bytes)
func (_MultiGomoku *MultiGomokuCaller) GetState(opts *bind.CallOpts, _session [32]byte, _key *big.Int) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _MultiGomoku.contract.Call(opts, out, "getState", _session, _key)
	return *ret0, err
}

// GetState is a free data retrieval call binding the contract method 0x29dd2f8e.
//
// Solidity: function getState(bytes32 _session, uint256 _key) constant returns(bytes)
func (_MultiGomoku *MultiGomokuSession) GetState(_session [32]byte, _key *big.Int) ([]byte, error) {
	return _MultiGomoku.Contract.GetState(&_MultiGomoku.CallOpts, _session, _key)
}

// GetState is a free data retrieval call binding the contract method 0x29dd2f8e.
//
// Solidity: function getState(bytes32 _session, uint256 _key) constant returns(bytes)
func (_MultiGomoku *MultiGomokuCallerSession) GetState(_session [32]byte, _key *big.Int) ([]byte, error) {
	return _MultiGomoku.Contract.GetState(&_MultiGomoku.CallOpts, _session, _key)
}

// GetStatus is a free data retrieval call binding the contract method 0x5de28ae0.
//
// Solidity: function getStatus(bytes32 _session) constant returns(uint8)
func (_MultiGomoku *MultiGomokuCaller) GetStatus(opts *bind.CallOpts, _session [32]byte) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _MultiGomoku.contract.Call(opts, out, "getStatus", _session)
	return *ret0, err
}

// GetStatus is a free data retrieval call binding the contract method 0x5de28ae0.
//
// Solidity: function getStatus(bytes32 _session) constant returns(uint8)
func (_MultiGomoku *MultiGomokuSession) GetStatus(_session [32]byte) (uint8, error) {
	return _MultiGomoku.Contract.GetStatus(&_MultiGomoku.CallOpts, _session)
}

// GetStatus is a free data retrieval call binding the contract method 0x5de28ae0.
//
// Solidity: function getStatus(bytes32 _session) constant returns(uint8)
func (_MultiGomoku *MultiGomokuCallerSession) GetStatus(_session [32]byte) (uint8, error) {
	return _MultiGomoku.Contract.GetStatus(&_MultiGomoku.CallOpts, _session)
}

// IsFinalized is a free data retrieval call binding the contract method 0xbcdbda94.
//
// Solidity: function isFinalized(bytes _query) constant returns(bool)
func (_MultiGomoku *MultiGomokuCaller) IsFinalized(opts *bind.CallOpts, _query []byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _MultiGomoku.contract.Call(opts, out, "isFinalized", _query)
	return *ret0, err
}

// IsFinalized is a free data retrieval call binding the contract method 0xbcdbda94.
//
// Solidity: function isFinalized(bytes _query) constant returns(bool)
func (_MultiGomoku *MultiGomokuSession) IsFinalized(_query []byte) (bool, error) {
	return _MultiGomoku.Contract.IsFinalized(&_MultiGomoku.CallOpts, _query)
}

// IsFinalized is a free data retrieval call binding the contract method 0xbcdbda94.
//
// Solidity: function isFinalized(bytes _query) constant returns(bool)
func (_MultiGomoku *MultiGomokuCallerSession) IsFinalized(_query []byte) (bool, error) {
	return _MultiGomoku.Contract.IsFinalized(&_MultiGomoku.CallOpts, _query)
}

// MaxStoneOnchain is a free data retrieval call binding the contract method 0xc1a28656.
//
// Solidity: function maxStoneOnchain() constant returns(uint8)
func (_MultiGomoku *MultiGomokuCaller) MaxStoneOnchain(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _MultiGomoku.contract.Call(opts, out, "maxStoneOnchain")
	return *ret0, err
}

// MaxStoneOnchain is a free data retrieval call binding the contract method 0xc1a28656.
//
// Solidity: function maxStoneOnchain() constant returns(uint8)
func (_MultiGomoku *MultiGomokuSession) MaxStoneOnchain() (uint8, error) {
	return _MultiGomoku.Contract.MaxStoneOnchain(&_MultiGomoku.CallOpts)
}

// MaxStoneOnchain is a free data retrieval call binding the contract method 0xc1a28656.
//
// Solidity: function maxStoneOnchain() constant returns(uint8)
func (_MultiGomoku *MultiGomokuCallerSession) MaxStoneOnchain() (uint8, error) {
	return _MultiGomoku.Contract.MaxStoneOnchain(&_MultiGomoku.CallOpts)
}

// MinStoneOffchain is a free data retrieval call binding the contract method 0x7ca22157.
//
// Solidity: function minStoneOffchain() constant returns(uint8)
func (_MultiGomoku *MultiGomokuCaller) MinStoneOffchain(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _MultiGomoku.contract.Call(opts, out, "minStoneOffchain")
	return *ret0, err
}

// MinStoneOffchain is a free data retrieval call binding the contract method 0x7ca22157.
//
// Solidity: function minStoneOffchain() constant returns(uint8)
func (_MultiGomoku *MultiGomokuSession) MinStoneOffchain() (uint8, error) {
	return _MultiGomoku.Contract.MinStoneOffchain(&_MultiGomoku.CallOpts)
}

// MinStoneOffchain is a free data retrieval call binding the contract method 0x7ca22157.
//
// Solidity: function minStoneOffchain() constant returns(uint8)
func (_MultiGomoku *MultiGomokuCallerSession) MinStoneOffchain() (uint8, error) {
	return _MultiGomoku.Contract.MinStoneOffchain(&_MultiGomoku.CallOpts)
}

// ApplyAction is a paid mutator transaction binding the contract method 0xf3c77192.
//
// Solidity: function applyAction(bytes32 _session, bytes _action) returns()
func (_MultiGomoku *MultiGomokuTransactor) ApplyAction(opts *bind.TransactOpts, _session [32]byte, _action []byte) (*types.Transaction, error) {
	return _MultiGomoku.contract.Transact(opts, "applyAction", _session, _action)
}

// ApplyAction is a paid mutator transaction binding the contract method 0xf3c77192.
//
// Solidity: function applyAction(bytes32 _session, bytes _action) returns()
func (_MultiGomoku *MultiGomokuSession) ApplyAction(_session [32]byte, _action []byte) (*types.Transaction, error) {
	return _MultiGomoku.Contract.ApplyAction(&_MultiGomoku.TransactOpts, _session, _action)
}

// ApplyAction is a paid mutator transaction binding the contract method 0xf3c77192.
//
// Solidity: function applyAction(bytes32 _session, bytes _action) returns()
func (_MultiGomoku *MultiGomokuTransactorSession) ApplyAction(_session [32]byte, _action []byte) (*types.Transaction, error) {
	return _MultiGomoku.Contract.ApplyAction(&_MultiGomoku.TransactOpts, _session, _action)
}

// FinalizeOnActionTimeout is a paid mutator transaction binding the contract method 0xb89fa28b.
//
// Solidity: function finalizeOnActionTimeout(bytes32 _session) returns()
func (_MultiGomoku *MultiGomokuTransactor) FinalizeOnActionTimeout(opts *bind.TransactOpts, _session [32]byte) (*types.Transaction, error) {
	return _MultiGomoku.contract.Transact(opts, "finalizeOnActionTimeout", _session)
}

// FinalizeOnActionTimeout is a paid mutator transaction binding the contract method 0xb89fa28b.
//
// Solidity: function finalizeOnActionTimeout(bytes32 _session) returns()
func (_MultiGomoku *MultiGomokuSession) FinalizeOnActionTimeout(_session [32]byte) (*types.Transaction, error) {
	return _MultiGomoku.Contract.FinalizeOnActionTimeout(&_MultiGomoku.TransactOpts, _session)
}

// FinalizeOnActionTimeout is a paid mutator transaction binding the contract method 0xb89fa28b.
//
// Solidity: function finalizeOnActionTimeout(bytes32 _session) returns()
func (_MultiGomoku *MultiGomokuTransactorSession) FinalizeOnActionTimeout(_session [32]byte) (*types.Transaction, error) {
	return _MultiGomoku.Contract.FinalizeOnActionTimeout(&_MultiGomoku.TransactOpts, _session)
}

// IntendSettle is a paid mutator transaction binding the contract method 0x130d33fe.
//
// Solidity: function intendSettle(bytes _stateProof) returns()
func (_MultiGomoku *MultiGomokuTransactor) IntendSettle(opts *bind.TransactOpts, _stateProof []byte) (*types.Transaction, error) {
	return _MultiGomoku.contract.Transact(opts, "intendSettle", _stateProof)
}

// IntendSettle is a paid mutator transaction binding the contract method 0x130d33fe.
//
// Solidity: function intendSettle(bytes _stateProof) returns()
func (_MultiGomoku *MultiGomokuSession) IntendSettle(_stateProof []byte) (*types.Transaction, error) {
	return _MultiGomoku.Contract.IntendSettle(&_MultiGomoku.TransactOpts, _stateProof)
}

// IntendSettle is a paid mutator transaction binding the contract method 0x130d33fe.
//
// Solidity: function intendSettle(bytes _stateProof) returns()
func (_MultiGomoku *MultiGomokuTransactorSession) IntendSettle(_stateProof []byte) (*types.Transaction, error) {
	return _MultiGomoku.Contract.IntendSettle(&_MultiGomoku.TransactOpts, _stateProof)
}

// MultiGomokuIntendSettleIterator is returned from FilterIntendSettle and is used to iterate over the raw logs and unpacked data for IntendSettle events raised by the MultiGomoku contract.
type MultiGomokuIntendSettleIterator struct {
	Event *MultiGomokuIntendSettle // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *MultiGomokuIntendSettleIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(MultiGomokuIntendSettle)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(MultiGomokuIntendSettle)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *MultiGomokuIntendSettleIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *MultiGomokuIntendSettleIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// MultiGomokuIntendSettle represents a IntendSettle event raised by the MultiGomoku contract.
type MultiGomokuIntendSettle struct {
	Session [32]byte
	Seq     *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterIntendSettle is a free log retrieval operation binding the contract event 0x82c4eeba939ff9358877334330e22a5cdb0472113cd14f90625ea634b60d2e5b.
//
// Solidity: event IntendSettle(bytes32 indexed session, uint256 seq)
func (_MultiGomoku *MultiGomokuFilterer) FilterIntendSettle(opts *bind.FilterOpts, session [][32]byte) (*MultiGomokuIntendSettleIterator, error) {

	var sessionRule []interface{}
	for _, sessionItem := range session {
		sessionRule = append(sessionRule, sessionItem)
	}

	logs, sub, err := _MultiGomoku.contract.FilterLogs(opts, "IntendSettle", sessionRule)
	if err != nil {
		return nil, err
	}
	return &MultiGomokuIntendSettleIterator{contract: _MultiGomoku.contract, event: "IntendSettle", logs: logs, sub: sub}, nil
}

// WatchIntendSettle is a free log subscription operation binding the contract event 0x82c4eeba939ff9358877334330e22a5cdb0472113cd14f90625ea634b60d2e5b.
//
// Solidity: event IntendSettle(bytes32 indexed session, uint256 seq)
func (_MultiGomoku *MultiGomokuFilterer) WatchIntendSettle(opts *bind.WatchOpts, sink chan<- *MultiGomokuIntendSettle, session [][32]byte) (event.Subscription, error) {

	var sessionRule []interface{}
	for _, sessionItem := range session {
		sessionRule = append(sessionRule, sessionItem)
	}

	logs, sub, err := _MultiGomoku.contract.WatchLogs(opts, "IntendSettle", sessionRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(MultiGomokuIntendSettle)
				if err := _MultiGomoku.contract.UnpackLog(event, "IntendSettle", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}
