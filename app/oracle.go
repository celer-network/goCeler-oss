// Code generated by protoc-gen-go. DO NOT EDIT.
// source: contracts/lib/proto/oracle.proto

package app

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OracleState struct {
	// serialized stateProof
	StateProof []byte `protobuf:"bytes,1,opt,name=state_proof,json=stateProof,proto3" json:"state_proof,omitempty"`
	// the address of user who updated the stateproof
	Updater []byte `protobuf:"bytes,2,opt,name=updater,proto3" json:"updater,omitempty"`
	// block number when state proof updated
	UpdateTime uint64 `protobuf:"varint,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// block number when oracle proof requested
	CurrentTime uint64 `protobuf:"varint,4,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"`
	// player addresses
	Players              [][]byte `protobuf:"bytes,5,rep,name=players,proto3" json:"players,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OracleState) Reset()         { *m = OracleState{} }
func (m *OracleState) String() string { return proto.CompactTextString(m) }
func (*OracleState) ProtoMessage()    {}
func (*OracleState) Descriptor() ([]byte, []int) {
	return fileDescriptor_efa7501b25fb2e42, []int{0}
}

func (m *OracleState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OracleState.Unmarshal(m, b)
}
func (m *OracleState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OracleState.Marshal(b, m, deterministic)
}
func (m *OracleState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OracleState.Merge(m, src)
}
func (m *OracleState) XXX_Size() int {
	return xxx_messageInfo_OracleState.Size(m)
}
func (m *OracleState) XXX_DiscardUnknown() {
	xxx_messageInfo_OracleState.DiscardUnknown(m)
}

var xxx_messageInfo_OracleState proto.InternalMessageInfo

func (m *OracleState) GetStateProof() []byte {
	if m != nil {
		return m.StateProof
	}
	return nil
}

func (m *OracleState) GetUpdater() []byte {
	if m != nil {
		return m.Updater
	}
	return nil
}

func (m *OracleState) GetUpdateTime() uint64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *OracleState) GetCurrentTime() uint64 {
	if m != nil {
		return m.CurrentTime
	}
	return 0
}

func (m *OracleState) GetPlayers() [][]byte {
	if m != nil {
		return m.Players
	}
	return nil
}

type OracleProof struct {
	OracleState          []byte   `protobuf:"bytes,1,opt,name=oracle_state,json=oracleState,proto3" json:"oracle_state,omitempty"`
	Sig                  []byte   `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OracleProof) Reset()         { *m = OracleProof{} }
func (m *OracleProof) String() string { return proto.CompactTextString(m) }
func (*OracleProof) ProtoMessage()    {}
func (*OracleProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_efa7501b25fb2e42, []int{1}
}

func (m *OracleProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OracleProof.Unmarshal(m, b)
}
func (m *OracleProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OracleProof.Marshal(b, m, deterministic)
}
func (m *OracleProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OracleProof.Merge(m, src)
}
func (m *OracleProof) XXX_Size() int {
	return xxx_messageInfo_OracleProof.Size(m)
}
func (m *OracleProof) XXX_DiscardUnknown() {
	xxx_messageInfo_OracleProof.DiscardUnknown(m)
}

var xxx_messageInfo_OracleProof proto.InternalMessageInfo

func (m *OracleProof) GetOracleState() []byte {
	if m != nil {
		return m.OracleState
	}
	return nil
}

func (m *OracleProof) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

func init() {
	proto.RegisterType((*OracleState)(nil), "oracle.OracleState")
	proto.RegisterType((*OracleProof)(nil), "oracle.OracleProof")
}

func init() { proto.RegisterFile("contracts/lib/proto/oracle.proto", fileDescriptor_efa7501b25fb2e42) }

var fileDescriptor_efa7501b25fb2e42 = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xb1, 0x6a, 0xc3, 0x30,
	0x10, 0x86, 0x71, 0x93, 0xc6, 0xf4, 0x9c, 0xa1, 0x68, 0x32, 0x85, 0x52, 0x35, 0x64, 0x30, 0x1d,
	0xec, 0xa1, 0x4b, 0xe9, 0x90, 0x21, 0x43, 0xd7, 0x14, 0xb7, 0x7b, 0x50, 0xec, 0x4b, 0x10, 0x28,
	0x3e, 0x21, 0x9d, 0x87, 0xbc, 0x65, 0x9f, 0x23, 0xd0, 0x77, 0x28, 0x96, 0x62, 0x68, 0xbb, 0xdd,
	0xdd, 0xff, 0x81, 0xf4, 0xfd, 0x20, 0x1b, 0xea, 0xd8, 0xa9, 0x86, 0x7d, 0x65, 0xf4, 0xae, 0xb2,
	0x8e, 0x98, 0x2a, 0x72, 0xaa, 0x31, 0x58, 0x86, 0x45, 0xcc, 0xe2, 0x76, 0x27, 0x0f, 0x44, 0x07,
	0x83, 0x11, 0xd9, 0xf5, 0xfb, 0xaa, 0x45, 0xdf, 0x38, 0x6d, 0x99, 0x5c, 0x24, 0x17, 0x5f, 0x09,
	0x64, 0x9b, 0x00, 0x7f, 0xb0, 0x62, 0x14, 0x0f, 0x90, 0xf9, 0x61, 0xd8, 0x5a, 0x47, 0xb4, 0xcf,
	0x13, 0x99, 0x14, 0xf3, 0x1a, 0xc2, 0xe9, 0x7d, 0xb8, 0x88, 0x25, 0xa4, 0xbd, 0x6d, 0x15, 0xa3,
	0xcb, 0xaf, 0x86, 0x70, 0x0d, 0xe7, 0x55, 0xaa, 0xda, 0xd6, 0xa1, 0xf7, 0xf5, 0x18, 0x89, 0x02,
	0xb2, 0x38, 0x6e, 0x59, 0x1f, 0x31, 0x9f, 0xc8, 0xa4, 0x98, 0xae, 0xd3, 0xf3, 0x6a, 0xda, 0xeb,
	0x8e, 0x6b, 0x88, 0xd9, 0xa7, 0x3e, 0xa2, 0x78, 0x82, 0x79, 0xd3, 0x3b, 0x87, 0x1d, 0x47, 0x74,
	0xfa, 0x17, 0xcd, 0x2e, 0x61, 0x60, 0x97, 0x90, 0x5a, 0xa3, 0x4e, 0xe8, 0x7c, 0x7e, 0x2d, 0x27,
	0xff, 0xdf, 0xbe, 0x44, 0x8b, 0xf5, 0x68, 0x14, 0x3f, 0xfc, 0x08, 0xf3, 0xd8, 0xc6, 0x36, 0x58,
	0x5c, 0x94, 0x32, 0xfa, 0x25, 0x7d, 0x0b, 0x13, 0xaf, 0x0f, 0xd1, 0xa7, 0x1e, 0xc6, 0xd7, 0x17,
	0x48, 0x3d, 0x19, 0x3e, 0x59, 0x14, 0xf7, 0x65, 0x2c, 0xb1, 0x1c, 0x4b, 0x2c, 0xdf, 0x34, 0x9a,
	0x76, 0x63, 0x59, 0x53, 0xe7, 0xf3, 0xef, 0x54, 0x26, 0xc5, 0x4d, 0x3d, 0xe2, 0xbb, 0x59, 0xc0,
	0x9e, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd5, 0x9c, 0x0c, 0x8c, 0xa5, 0x01, 0x00, 0x00,
}
